# Import necessary libraries
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Create a sample dataset
data = {
    'bedrooms': [2, 3, 4, 3, 2, 4, 3, 2, 3, 4],
    'square_footage': [1200, 1500, 1700, 1400, 1300, 1600, 1500, 1200, 1300, 1800],
    'price': [200000, 250000, 270000, 230000, 210000, 260000, 240000, 200000, 220000, 280000]
}

df = pd.DataFrame(data)

# Define features (X) and target variable (y)
X = df[['bedrooms', 'square_footage']]
y = df['price']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a linear regression model
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Make predictions on the test set
predictions = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, predictions)
print(f'Mean Squared Error: {mse}')

# Plot the predictions against the actual prices
plt.scatter(X_test['square_footage'], y_test, color='black', label='Actual Prices')
plt.scatter(X_test['square_footage'], predictions, color='blue', label='Predictions')
plt.xlabel('Square Footage')
plt.ylabel('House Price')
plt.legend()
plt.show()
oen
